#!/bin/bash

## Checks if vpnint is up and asks for disconnect or if not running asks for connection

#Change to name of network interface 'nmcli connection show -a' to list interfaces connected
vpnint="wg0"
vpn=$(nmcli -t connection show | grep "$vpnint" | awk -F: '{ print $1 }')

# Need wireguard-tools & NetworkManager installed.
# Put .conf file in /etc/wireguard/wg0.conf to use wg-quick
# run 'nmcli con import type wireguard file /etc/wireguard/wg0.conf' to use nmcli connection

if nmcli connection show --active | grep "$vpnint"; then
  echo "Wireguard is currently running"
  read -rp "Would you like disconnect Wireguard '$vpn' [y/n]?: " varClose
  case ${varClose:0:1} in
    y|Y )
      echo "Bringing Wireguard tunnel '$vpn' down"
      #nmcli connection down $vpn
      wg-quick down "$vpnint"
      # Will reconnect current network to fix 'resolv.conf'
      #con=$(nmcli connection show -a | awk -F '  ' 'FNR == 2 {print $1}')
      #nmcli connection up "$con"
      ;;
    n|N )
      echo "Leaving Wireguard '$vpn' connected"
      ;;
    * )
      printf "\nInvalid entry\nLeaving Wireguard '%s' connected\nRerun command if you'd like to change options" "$vpn"
      ;;
  esac
else
  echo "Wireguard tunnel '$vpn' is not connected"
  read -rp "Would you like to connect '$vpn' tunnel [y/n]?: " varConnect
  case ${varConnect:0:1} in
    y|Y )
      echo "Connecting to wireguard tunnel '$vpn'"
      #nmcli connection up $vpn
      wg-quick up "$vpn"
      ;;
    n|N )
      echo "Leaving wireguard tunnel '$vpn' down"
      ;;
    * )
      printf "\nInvalid entry\nLeaving wireguard tunnel '%s' down\nRerun command if you'd like to change options" "$vpn"
      ;;
  esac
fi
