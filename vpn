#!/usr/bin/env bash

#Change to name of network interface 'ip a' to list interfaces
vpn=wg0

# Need wireguard-tools & NetworkManager installed.
# Put .conf file in /etc/wireguard/vpn.conf to use wg-quick
# run 'nmcli con import type wireguard file /etc/wireguard/vpn.conf' to use nmcli connection

if [[ $(nmcli connection show -a | grep $vpn) ]]; then
    echo "Wireguard is currently running"
    read -p "Would you like disconnect Wireguard '$vpn' (y|n)?: " varClose
        case ${varClose:0:1} in
        y|Y )
        echo "Bringing Wireguard tunnel '$vpn' down"
        nmcli connection down $vpn
        #wg-quick down $vpn
        # Will reconnect current network to fill 'resolv.conf'
        con=$(nmcli connection show -a | awk 'FNR == 2 {print $1}')
        nmcli connection up $con
        ;;
        n|N )
        echo "Leaving Wireguard '$vpn' connected"
        ;;
        * )
        echo "Invalid entry"
        echo "Leaving Wireguard '$vpn' connected"
        echo "Rerun command if you'd like to change options"
        ;;
        esac
else
    echo "Wireguard tunnel '$vpn' is not connected"
    read -p "Would you like to connect '$vpn' tunnel (y|n)?: " varConnect
        case ${varConnect:0:1} in
        y|Y )
        echo "Connecting to wireguard tunnel '$vpn'"
        nmcli connection up $vpn
        #wg-quick up $vpn
        ;;
        n|N )
        echo "Leaving wireguard tunnel '$vpn' down"
        ;;
        * )
        echo "Invalid entry"
        echo "Leaving wireguard tunnel '$vpn' down"
        echo "Rerun command if you'd like to change options"
        ;;
        esac
fi
