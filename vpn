#!/usr/bin/env bash

# Name of the WireGuard interface
# Or send as variable
INT_NAME="${1:-proton}"

# Function to check WireGuard connection status
check_wireguard_status() {
  if sudo wg show | grep -q "$INT_NAME"; then
    echo "WireGuard tunnel ('$INT_NAME') is connected."
    return 0
  else
    echo "WireGuard tunnel ('$INT_NAME') is not connected."
    return 1
  fi
}

# Function to connect WireGuard
connect_wireguard() {
  if wg-quick up "$INT_NAME"; then
    echo "WireGuard tunnel ('$INT_NAME') connected."
  else
    echo "Failed to connect WireGuard tunnel ('$INT_NAME')."
  fi
}

# Function to disconnect WireGuard
disconnect_wireguard() {
  if wg-quick down "$INT_NAME"; then
    echo "WireGuard tunnel ('$INT_NAME') disconnected."
  else
    echo "Failed to disconnect WireGuard tunnel ('$INT_NAME')."
  fi
}

# Main script
echo "Checking WireGuard status..."
if check_wireguard_status; then
  # WireGuard is connected, prompt to disconnect
  read -rp "Do you want to disconnect the ('$INT_NAME') tunnel? [y/N]: " answer
  case "$answer" in
    [yY])
      disconnect_wireguard
      ;;
    *)
      echo "Leaving WireGuard tunnel ('$INT_NAME') up."
      ;;
  esac
else
  # WireGuard is not connected, prompt to connect
  read -rp "Do you want to connect to ('$INT_NAME') tunnel? [y/N]: " answer
  case "$answer" in
    [y/Y])
      connect_wireguard
      ;;
    *)
      echo "Leaving WireGuard tunnel ('$INT_NAME') down."
      ;;
  esac
fi
