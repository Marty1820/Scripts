#!/bin/bash

# Checks currently set CPU power and give options for changing to better power or better battery life

# array for all cpu's energy_perf_bias
eperf_files=(/sys/devices/system/cpu/cpu*/power/energy_perf_bias)

# Array of options and # equivalants
options=("performance" "balance-performance" "normal, default" "balance-power" "power")
epb_values=(0 4 6 8 15)

# Grabs the first file # from the array
cur_ener=$(cat "${eperf_files[1]}")

# Changes #'s to Options
case "${cur_ener}" in
  (0)  cur_name="performance" ;;
  (4)  cur_name="balance-performance" ;;
  (6)  cur_name="normal, default" ;;
  (8)  cur_name="balance-power" ;;
  (15) cur_name="power" ;;
  (*)  cur_name=$(printf "Value %s [0-15]" "$cur_ener") ;;
esac

# verifies that it's a number
num='^[0-9]+$'

# Runs loop to choose performance level
while true; do
  printf 'Please select an option: (Current - %s)\n\n' "$cur_name"
  printf "%s\n" "${options[@]}" | grep -En ".*."
  printf "0:Quit/Exit\n\n"
  read -rp "Enter selection [#s only]: " choice
  case "$choice" in
    0)
      # Exits prompts
      printf "\nUser requested exit\n"
      exit
      ;;
    *)
      if ! [[ $choice =~ $num ]] ; then
        # Notifies of invalid entry and reruns loop
        printf "\n############# \nInvalid entry \n#############\n"
      else
        # Prints out choice then changes files to choice
        name=$(printf "%s\n" "${epb_values[choice - 1]}")
        echo "$name" | sudo tee "${eperf_files[@]}" > /dev/null
        sleep 2
        # Prints previous one/needs work
        printf "\nSetting CPU to %s\n" "$cur_name"
        exit
      fi
      ;;
  esac
done
