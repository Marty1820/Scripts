#!/bin/bash
# Modified from Luke Smiths dmenu mount and unmount scripts
# https://github.com/LukeSmithxyz/voidrice/tree/master/.local/bin/ demnumount & dmenunmount
# Gives a terminal prompt to mount unmounted drives. If they're in /etc/fstab, 
# they'll be mounted automatically. Otherwise, you'll be prompted to give a 
# mountpoint from already existing directories. If you input a novel directory, 
# it will prompt you to create that directory.

getmount() { \
  [ -z "$chosen" ] && exit 1
    # shellcheck disable=SC2086
  find $1 2>/dev/null
  read -rp "Type in mount point." mp
  test -z "$mp" && exit 1
  if [ ! -d "$mp" ]; then
    read -rp "$mp does not exist. Create it? [y/n] " mkdiryn
    [ "$mkdiryn" = "y" ] && (mkdir -p "$mp" || sudo mkdir -p "$mp")
  fi
}

mountusb() { \
  echo "$usbdrives"
  read -rp "Mount which drive? " chosen
  chosen="$(echo "$chosen" | awk '{print $1}')"
  sudo mount "$chosen" 2>/dev/null && notify-send "ðŸ’» USB mounting" "$chosen mounted." && exit 0
  alreadymounted=$(lsblk -nrpo "name,type,mountpoint" | awk '$3!~/\/boot|\/home$|SWAP/&&length($3)>1{printf "-not ( -path *%s -prune ) ",$3}')
  getmount "/mnt /media /mount -maxdepth 3 -type d $alreadymounted"
  partitiontype="$(lsblk -no "fstype" "$chosen")"
  case "$partitiontype" in
    "vfat") sudo mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
    "exfat") sudo mount "$chosen" "$mp" -o uid="$(id -u)",gid="$(id -g)";;
    *) sudo mount "$chosen" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo chown "$user":"$ug" "$mp";;
  esac
  notify-send "ðŸ’» USB mounting" "$chosen mounted to $mp."
}

unmountusb() {
  [ -z "$drives" ] && exit
  echo "$drives"
  read -rp "Unmount which drive? " chosen
  chosen="$(echo "$chosen" | awk '{print $1}')"
  [ -z "$chosen" ] && exit
  sudo umount "$chosen" && notify-send "ðŸ’» USB unmounting" "$chosen unmounted."
}

mounting() {
  if [ -z "$usbdrives" ]; then
    echo "No mountable drives detected."
  else
    echo "USB drive(s) detected."
    mountusb
  fi
}

unmounting() {
  if [ -z "$drives" ];then
    echo "No USB drives unmountable"
  else
    echo "Unmountable USB drive detected."
    unmountusb
  fi
}

usbdrives="$(lsblk -rpo "name,type,size,mountpoint" | grep 'part\|rom' | awk '$4==""{printf "%s (%s)\n",$1,$3}')"
drives=$(lsblk -nrpo "name,type,size,mountpoint,label" | awk -F':' '{gsub(/ /,":")}$4!~/\/boot|\/run|\/efi|\/home$|SWAP/&&length($4)>1{printf "%s (%s) %s\n",$4,$3,$5}')

read -rp "Mount or Unmount? [m/u]: " mntchoice
case "$mntchoice" in
  m|M|mount|Mount)
    mounting
  ;;
  u|U|unmount|Unmount)
    unmounting
  ;;
  *)
    printf "\nInvalid entry\n"
  ;;
esac
